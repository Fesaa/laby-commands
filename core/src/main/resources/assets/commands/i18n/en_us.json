{
  "commands": {
    "settings": {
      "name": "TEST",
      "enabled": {
        "name": "Enabled"
      }
    },
    "exceptions": {
      "commands": {
        "unknown": "An unknown error occurred while processing something command related",
        "defaultError": "An error has occurred during the executing of the command. Check your game logs for more information.",
        "wrongNumberOfArgs": "Commands must include, and start with, an argument with type CommandContext. (%s)",
        "wrongFirstArg": "First argument extend CommandContext. (%s)",
        "contextWrongArg": "CommandContext can only be used as the first argument. (%s)",
        "greedyNotLast": "Greedy can only be used on the last argument. (%s)",
        "optionalBeforeNone": "Optional arguments can only be succeeded by optional arguments. (%s)",
        "boundedOnWrongType": "Bounded can only be used on Integers, Floats and Doubles. (%s)",
        "checkMethodNotPublic": "CheckMethod method (%s) must be public for %s.",
        "checkMethodNotExist": "CheckMethod method (%s) does not exists for %s.",
        "errorMethodNotPublic": "ErrorMethod method (%s) must be public for %s.",
        "errorMethodNotExist": "ErrorMethod method (%s) does not exists for %s.",
        "wrongReturnType": "Command must return a boolean. (%s)",
        "commandMethodNotPublic": "Command method must be public. (%s)",
        "commandNotFound": "Found a non existing command? (%s)",
        "parentNotFoundOrNotCommand": "%s's parent %s doesn't exist or isn't annotated with @Command.",
        "autoCompleteMethodNotPublic": "Autocomplete method (%s) must be public for %s.",
        "autoCompleteNotExist": "Autocomplete method (%s) does not exists for %s.",
        "unsupportedArgumentType": "Unsupported type for argument (%s) with type %s",
        "checkCannotInvoke": "Couldn't invoke command check (%s), returning early with value 1.",
        "checkNotBoolean": "Check %s did not return a boolean, returning early with value 1.",
        "errorMethodCannotInvoke": "Couldn't invoke ErrorComponent method (%s) for check (%s), returning early with value 1.",
        "errorMethodWrongType": "ErrorComponent method (%s) returned the wrong type (%s), returning early with value 1.",
        "cannotGetArgument": "Could not get argument for parameter (%s) because (%s), adding null.",
        "impossibleError": "Encounter %s error this should not be possible. These should be checked in validateMethod.",
        "commandCannotInvoke": "Encountered an error during command invocation",
        "suggestionCannotComplete": "Suggestions couldn't complete. Returning empty.",
        "cannotInitialiseCommandClass": "An exception occurred initialising CommandClassTransformer for %s",
        "cannotGetCommands": "An exception occurred getting commands for %s",
        "noCommandSource": "Null source, cannot provide arguments",
        "cannotInitialiseCustomArgument": "An exception occurred initialising CustomArgument for %s"
      },
      "types": {
        "notAPlayer": "%s is not a player",
        "positionNotComplete": "Position argument not completed",
        "notAInteger": "Expected an integer",
        "notAUUID": "%s is not a valid UUID",
        "notAIntegerBut": "Expected an integer, got: %s",
        "notAFloat": "Expected a float",
        "notAFloatBut": "Expected a float, got: %s",
        "notADouble": "Expected a double",
        "notADoubleBut": "Expected an double, got: %s",
        "notALong": "Expected an long",
        "notALongBut": "Expected an long, got: %s"
      }
    }
  }
}